// <auto-generated />
using System;
using BabyKat.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BabyKat.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BabyKat.Infrastructure.Data.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "What we tend to call overtiredness happens when an emotional state, such as anxiety, distress or fear, blocks our ability to go to sleep even when we’re really tired. This is a survival response that helps us to stay awake when in danger, no matter how tired we are. It suggests overtiredness can be reframed to help us better respond to our child’s needs when it happens.\r\n\r\nAt the end of the day, the feeling we have of needing to sleep is called sleep pressure. The longer we stay awake the more sleep pressure rises. Typically, the higher it gets, the easier it is to fall asleep. If we stay awake for long enough, eventually we’ll fall asleep even if we are trying not to.The sensation of sleep pressure is caused by the build-up of chemicals (called adenosines) in the brain. These are proteins that are removed from our brains while we sleep, and build up again while we are awake.\r\n\r\nFor adults, this process takes about 14-16 hours. When we delay sleep past this point the build-up of adenosines cannot go on unchecked. At some point, eventually, we must sleep.\r\n\r\nBabies’ sleep pressure builds up more quickly than adults. Young babies often fall asleep after being awake for an hour or two. As children get older, sleep pressure builds more slowly. But it takes several years until a child is able to stay awake all day.To fall asleep we must be calm, relaxed and able to switch off our brains so that the build up of sleep pressure can tip us into sleep. When something blocks the action of sleep pressure, such as fear, pain or racing thoughts, we may struggle with sleeplessness.\r\n\r\nIn the same way, sleep happens more easily for a baby or child when sleep pressure is high, they are in a calm relaxed state, and nothing is preventing sleep onset. But sometimes babies and children need help to become calm before sleep pressure can kick in and they can nod off.\r\n\r\nWhen a baby or young child’s sleep pressure is high and the need to sleep is strong, but they are emotionally unable to calm themselves, or they are in a situation where they cannot relax – where there is noise, lights, or activity – we may label them as overtired. Emotional exhaustion, which is a form of stress, prevents both children and adults from sleeping and makes them cranky.\r\n\r\nSome responses to overtiredness are heavy-handed. Ordering a child to their room, putting them to bed in the face of distress or punishing them for not falling asleep when told to do so will dial up the child further and push sleep further from reach. After all, none of us can fall asleep on command.",
                            ImgUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/40/74/528883_883_XXXL.jpg",
                            Title = "What’s really going on when a child is ‘overtired’ – and how to help them go to sleep",
                            UserId = "dea12856-c198-4129-b3f3-b893d8395082"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Imagine for a moment that you have been abducted by space ship to a distant planet, and you are surrounded by giant strangers whose language you do not speak. Two of those strangers take you under their care. You are entirely dependent on them for the satisfaction of all your needs - hunger, thirst, comfort, and - especially - reassurance that you are safe in this strange place. Then imagine that something is very wrong - you are in pain, or terribly thirsty, or in need of emotional support. But your two attendants ignore your cries of distress, and you are unable to get them to help you or to understand your needs. Now you have another problem, more serious than the first: you feel completely helpless and alone in an alien world.\r\n\r\nIn all innocence, a baby assumes that we, as his parents, are correct - that whatever we do is what we ought to be doing. If we do nothing, the baby can only conclude that he is unloved because he is unlovable. It is not within his capabilities to conclude that we are only busy, distracted, worried, misled by \"experts\", or simply inexperienced as parents. No matter how deeply we love our baby, it is mostly the outward manifestations of that love that the baby can understand.\r\n\r\nNo one likes to have his communication ignored, and if it is, this brings on feelings of helplessness and anger that inevitably damage the relationship. Such a response seems to be one that is universally experienced by adults, and there is no reason to conclude that it is any different for babies and children. Few people would ignore an adult while he repeatedly said, \"Can you help me? I'm not feeling right.\" Ignoring such a request would be considered most unkind. But a baby cannot make such a statement; he can only cry and cry until someone responds - or until he gives up in despair.\r\n\r\nImmediate response to a baby's cry went unquestioned for thousands of years until recent times. In our culture, we assume that crying is normal and unavoidable for babies. Yet in natural societies where babies are carried close to the care-giver much of the day and night for the first several months, such crying is rare. In contrast to what many in our society would expect, babies cared for in this way show self-sufficiency sooner than do babies not receiving such care.\r\n\r\nIn fact, research on early childhood experiences consistently shows that children who have enjoyed the most loving care in infancy become the most secure and loving adults, while those babies who have been forced into submissive behavior build up feelings of resentment and anger that may well be expressed later in harmful ways.\r\n\r\nIn spite of this research, most arguments for ignoring crying are based on fears of \"spoiling\" the baby. A typical baby-care brochure advises the parent to \"let the baby handle it for a while\". Though infancy can be a challenging time for the parents, a baby is simply too young and inexperienced to \"handle\" the cause of the crying, whatever it may be. He cannot feed himself, change himself, or comfort himself in the way that nature intended. Clearly, it is the parents' responsibility to meet their baby's needs for nurturing, security, and love, not the baby's responsibility to meet his parents' need for peace and solitude.\r\n\r\nThe pamphlet implies that if the parents give their baby an opportunity to become self-reliant, they are helping him to mature. But an infant is simply not capable of such maturity. True maturity reflects a strong foundation of emotional security that can only come about from the love and support of those closest to him during the earliest years.\r\n\r\nAn immature person can only respond to stress in an immature way. A baby denied his birthright of comforting from his parents may respond by turning to ineffective self-stimulation (head-banging, rhythmic rocking, thumb-sucking, etc.) and emotional withdrawal from others. If his needs are routinely ignored, he may decide that loneliness and despair are preferable to risking further disappointment and rejection. Unfortunately, this decision, once made, can become a permanent outlook, leading to an emotionally impoverished life.\r\n\r\nMany child-care professionals feel that parental encouragement of self-satisfiers and over-substitution of material objects - teddy bears substituting for parents, strollers for arms, cribs for shared sleep, pacifiers for nursing, toys for parents' attention, music boxes for voices, formula for breast-milk, wind-up swings for laps - have led to an age of materialistic acquisition, personal loneliness and lack of emotional fulfillment.\r\n\r\nIgnoring a baby's crying is like using earplugs to stop the distressing noise of a smoke detector. The sound of a smoke detector is meant to alert us to a serious matter that requires a response - and so is the cry of a baby. As Jean Liedloff wrote in The Continuum Concept, \"a baby's cry is precisely as serious as it sounds.\"\r\n\r\nStressful though it may be, infant crying should be seen not as a power struggle between parent and child, but as a gift of nature to ensure that all babies can grow to adulthood with a generous capacity for love and trust.",
                            ImgUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/39/58/517361_9155_XXXL.jpg",
                            Title = "A Baby Cries: How Should Parents Respond?",
                            UserId = "dea12856-c198-4129-b3f3-b893d8395082"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Being carried or worn in an upright position with proper leg support is not only developmentally sound but often preferable to mothers and babies alike.\r\n\r\nEurope seems to host the greatest number of pediatricians who recommend that, in order to avoid pressure on their underdeveloped bodies, newborns and infants should lie flat on their backs in a stroller and not be carried. Yet, laying a young infant on his back alone in a stroller is actually physically and emotionally stressful, and can be developmentally inhibiting. Being carried or worn in an upright position with proper leg support is not only developmentally sound but often preferable to mothers and babies alike. Upright carrying optimizes the physical, emotional and intellectual growth of your baby.\r\n\r\nInfant Spine Development\r\nOur spines are not perfectly straight, even though they may appear so from the front or back. When you look at a person from the side, four slight curves are visible, forming an elongated S shape. These curves help keep us flexible and balanced. They also help absorb stresses placed on our bodies through our daily activities, such as walking, running and jumping.\r\n\r\nWe weren't born with these curves. Normal curves of the spine develop gradually, as a means of adapting to gravity. At birth, babies are in a state of flexion, still curled up, with their spines in a natural, long C-shaped (convex) curve. At first, a baby does not have the strength to hold his head up, nor the balancing curves in his spine to do so. But gradually, as the muscles in his neck get stronger, he begins to lift his heavy head against gravity, and a curve starts to develop in his neck (the cervical curve) to help balance his head. When your baby starts to creep and crawl, the lower back (lumbar curve) and the muscles that support it develop. It takes about a full year for your baby to attain these curves in his spine.\r\n\r\nThe Stresses of Lying Flat\r\nLaying your young infant flat on his back stretches the C-curved spine into a straight line, against its natural shape. Research shows that keeping an infant's spine straight is not a sound physiological position. In addition to stressing the baby's spine, it can also negatively influence the development of the baby's hip joints.\r\n\r\nInfants who lie frequently on their backs in a stroller may end up with plagiocephaly (deformed skulls, flattened on the back or side) and deformed bodies with poor muscle tone. Research backed by the American Academy of Pediatrics states that \"with prolonged immobilization on a firm mattress or a flat bed (as in a stroller), the constant influence of gravity flattens the body surface against the mattress producing positional disorders and infants with decreased muscle tone.\"\r\n\r\nExistence in Containers\r\nThis does not mean that laying the baby flat for a couple of walks around the block in a stroller is going to wreak havoc on your baby's physical development. But the truth is that the average Western infant between 3 weeks and 3 months of age is carried little more than two and a half hours a day. Babies spend most of their time in containers, such as car seats, cribs and strollers. The West has diverged from eons of child rearing, and we have gotten to the point of letting objects determine our babies' sense of contact, rather than us.\r\n\r\nThe Fetal Tuck\r\nNewborns are virtually impossible to stretch out unless wrapped or swaddled. When you place an infant flat on his back, his thighs will usually be pulled up toward his chest, or when sleeping, straddled and bent in a frog position. The fetal tuck, the natural position of babies, is the most calming and the most adaptive.\r\n\r\nInfants use less oxygen, which conserves energy and wastes fewer calories. They digest their food better. Also, we have more efficient temperature-regulating cells and more fat on the back sides of our bodies, so when we hold our infants stomach-to-stomach, we are protecting all their receptor and vital organs.\r\n\r\nThe instinctual flexed widespread legs that an infant maintains when picked up, coupled with the palmar and plantar reflexes that help an infant cling to his mother, suggests that infants' little bodies are adapted to be carried upright and oriented toward their mothers.\r\n\r\nBy holding your baby with his knees flexed flat against your chest and supporting his bottom, you are supporting your baby in the natural position that his body instinctively assumes to ensure that he is comfortable, warm and safe.\r\n\r\nThe Trouble with Car Seats\r\nStrollers that position a baby in a somewhat upright position (such as in infant car seats) may be gentler on the baby's C-shaped spine, in that they do not stretch it flat. But car seats are not a much better option for transporting your little one. Research by the International Chiropractic Pediatric Association shows that they are not the ideal transport for your infant when not in the car, due to \"restricted postural options which can impact your baby's developing cranium and spine.\"\r\n\r\nBy keeping the spine in a C-shaped configuration, these contraptions can actually prevent the natural curves from forming. Babies can have a hard time acquiring adequate muscle strength to hold up their heads if they don't get much of a chance to experience gravity.\r\n\r\nPositive Physical Development\r\nWhen infants are held upright, they are allowed to practice compensatory movements, enhancing muscular strength and allowing for more control over their fine motor skills. When the mother walks, stops or turns, an infant's body naturally works against the pull of gravity to maintain his position.\r\n\r\nThe force of gravity is a positive element in infant development. It allows them to learn to hold their heads up and keep their bodies balanced.",
                            ImgUrl = "https://images.pexels.com/photos/1556706/pexels-photo-1556706.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
                            Title = "The Benefits of Baby Carrying",
                            UserId = "dea12856-c198-4129-b3f3-b893d8395082"
                        },
                        new
                        {
                            Id = 4,
                            Description = "What do you see when you look into the eyes of a newborn?\r\n\r\nWhen I first looked into the eyes of my son, I saw trustfulness, curiosity and joyfulness. I saw no deviousness, meanness or selfishness. In that instant it became clear to me that if he ever acted in a devious, mean, or selfish way, his behavior would have been created by circumstances, not by him. In that instant, I knew what a great responsibility I had to honor and protect his innocence and joy in life.\r\n\r\nChildren are born innocent. They want only to be loved, to learn, and to contribute. Those parents who are not able to appreciate this truth miss what should be the most precious moment of their life. They cannot trust their child - they instead suspect him of being somehow flawed and requiring constant correction. The emphasis is on fixing something, not on enjoying and learning about this new person. The focus, from that point on, is on the child's behavior, not on the parent-child connection.A parent's attitude is absolutely critical in determining the kind of relationship they will have with their child. I find nothing sadder than seeing a parent who has somehow missed seeing their child's basic sweetness and good intentions, and thus believes that punishment is necessary to set him on the right path. This parent is always watchful, looking for ways to correct the child, which stifles his natural exuberance. This kind of suspiciousness is self-fulfilling - the child who is punished responds emotionally - as does any other person - with anger and fantasies of revenge, and physiologically with a burst of the stress hormone cortisol. The parent then feels justified in continuing and even escalating the punishments. The child is from then on seen as potential trouble - as the enemy.\r\n\r\nThe parent who is fortunate enough to see in his newborn's eyes only love, curiosity, and joy, will continue to trust and enjoy their child. Instead of looking for \"misbehavior\", this parent looks for ways to connect and to bring joy into their child's life. This attitude is also self-fulfilling, because love begets love. The child responds to being loved and trusted as we all do - by loving and trusting in return.\r\n\r\nWhat takes place at the moment a parent first looks into their child's eyes sets the stage for a lifetime of joyful connection, or a lifetime of struggle. It sets the stage for a rewarding relationship of trust and connection, or a battle between adversaries. This first meeting carries the seeds of years of happiness or misery. For those who can see their newborn's innocence and pure intentions, parenting may be challenging at times, but it is never a burden.",
                            ImgUrl = "https://images.pexels.com/photos/421884/pexels-photo-421884.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
                            Title = "Children are Born Innocent",
                            UserId = "dea12856-c198-4129-b3f3-b893d8395082"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Things are busy on a rainy Saturday afternoon when I make a trip to the mall to finalize some back-to-school shopping. I pass by a lot of people, including several parents with young children under two years old, in strollers, and am struck by the fact that all of the children have a tablet or phone in their hands. Has technology become the ultimate tool for keeping children calm?\r\n\r\nAs an optometrist and eye health expert, this observation saddens me every time I see it, since I know all the harmful effects such exposure to electronic tools can have on children.\r\n\r\nThese effects are all the more critical during the first years of life, both on the visual level and on the cognitive and social development of children.\r\n\r\nVisual development of children\r\nThe human eye develops through stimulation. The quality of the optical stimulus influences the growth of the eyeball via a complex and balanced mechanism. At birth, the eye is hyperopic, that is to say, its power is not perfectly adjusted to its size. A child sees at short distances and is barely able to distinguish a shadow when grandpa comes to the bedroom door.In the first few weeks, the eye grows, the retina matures and a balance is established between the growth of the eyeball and the power of the inner lens. At six months of age, each of the toddler’s two eyes has the vision of an adult eye. From this moment on, the eyes will develop their coordination, in order to generate vision in three dimensions. It’s also starting at the age of six months that the communication between the eyes develops in the visual brain as well.\r\n\r\nBillions of neurological connections will have to be made during the first eight years of life. This maturation time is long, but necessary, considering that more than a third of the brain’s neurons are dedicated to vision.\r\n\r\nA question of distance\r\nElectronic devices are not, in themselves, a source of visual problems. Rather, the inappropriate use of these devices can interfere with the natural development of the eye, as well as reading and learning skills.\r\n\r\nTwo small children with glasses sitting on white chairs : a boy with a tablet computer, a girl with a cell phone\r\nFor normal visual development, it is recommended that exposure to electronic devices be avoided between the ages of zero and two years. (Shutterstock)\r\nThe first thing to consider is viewing distance. The eye is designed to look at a near distance that is about equal to the length of the forearm (distance from the elbow to the fingertips of the hand). That means about 30 cm for a young child, and 40 cm for an adult. However, tablets and phones are held on average 20-30 cm from the eye, and this distance becomes shorter with prolonged exposure. The visual effort required to maintain a clear image at this distance is therefore doubled.\r\n\r\nA distance that is too short influences the quality of the retinal image (and therefore visual development) and causes excessive eye fatigue. It is also important to understand that when eyes must accommodate short distances, they automatically converge towards the nose in order to focus at the normal reading distance. Too much effort spent accommodating the short distance is therefore accompanied by a greater than normal convergence. As the eye cannot maintain this prolonged effort over a long period of time, it will relax its effort and the perceived image will become blurred for a while, a sensory penalty that we want to avoid. After a period of rest, the eye will resume its effort, and this alternation between the clearness and the blur will continue as long as attention to the close image is required. So, ideally, the tablet or phone should always be kept at the distance of the forearm.\r\n\r\nConstant stimulation is not recommended\r\nThe use of electronic tools, with games or videos, requires a constant attention span, without breaks. This is the second factor to consider. When a child draws in a notebook or reads a paper book, he or she will instinctively stop at some point, look elsewhere, far away, and become interested in something else around them. These pauses and breaks are beneficial for the visual system to recover from its effort. Focusing on targets at a distance is also beneficial to the child’s visual development. With electronic tablets, it is not uncommon to see children doing sessions of more than two to three hours continuously, without looking up from the screen.\r\n\r\nThe visual apparatus of children from zero to two years old is simply not sufficiently developed and robust to undergo such stress from constant stimulation in front of the screen. In particular, the structural elements of the sclera (the deep layer of the eye), which give the eye rigidity and determine its size, develop between zero and two years of age and then stabilize. The visual stimulus at these ages can interfere and therefore influence the development of visual defects and pathology in later life.\r\n\r\nIt is also important to note that the screen can emit blue light. Children’s eyes do not filter these rays like those of an adult. This means that children are exposed to more blue light, which may stimulate nearsightedness and disrupt the secretion of melatonin, which regulates our biological clock. This can disrupt the naps necessary for children of this age, as well as sleep during the night. Sleep loss can also lead to myopia.\r\n\r\nLet’s learn about electronics\r\nFor normal visual development, it is therefore recommended to avoid all exposure to electronic devices between the ages of zero and two. The exception would be occasional video conversations, under the supervision of a parent, to say hello to a grandparent who lives far away, for a few minutes.\r\n\r\nFrom the age of two years on, an hour of exposure per day can be considered, especially to consult educational sites, always accompanied by a parent or an educator.\r\n\r\n",
                            ImgUrl = "https://www.bankrate.com/2022/08/02123424/financially-preparing-for-a-baby.jpg?auto=webp&optimize=high&crop=16:9&width=912",
                            Title = "Development of vision in early childhood: No screens before age two",
                            UserId = "dea12856-c198-4129-b3f3-b893d8395082"
                        },
                        new
                        {
                            Id = 6,
                            Description = "You might be one of those people who, since their own childhood, has curated lists of potential names for any children you might have. Or your interest in names might only have emerged because you’re actually expecting your first child. Suddenly, you’ve started noticing first names everywhere.\r\n\r\nYour thoughts might travel back to older relatives. In the UK, names like Evelyn or Arthur used to feel dated, but somehow they now feel fresh and beautiful. Parents-to-be might not tell their friends about their favourites: this is their special name, and they don’t want to risk someone stealing it.\r\n\r\nHowever, it is often the case that when little Arthur or Evelyn goes to nursery or school, their name doesn’t seem so original anymore. It turns out, there are in fact three Evelyns in the class, and several Arthurs in the playground, despite the fact that the children’s parents might have never met any Evelyns or Arthurs before having their own.American sociologist Stanley Lieberson shows in his 2000 book, A Matter of Taste: How Names, Fashions, and Culture Change that parents-to-be like the same names at the same time for a variety of reasons – from generational preferences to societal changes and cultural influences – but mostly because since the late 19th century, it has become a matter not of custom, but of taste. As such, it follows the same gradual shifts and reversals as other expressions of fashion.\r\n\r\nA parent with two young children in a field of long grass.\r\nSocietal shifts and cultural influences both shape naming trends. Joice Kelly | Unsplash\r\nHow names can feel overused\r\nWhen you think about the names that you find attractive, it is interesting to consider whether any of them are common in your own generation, or in your parents’ generation. The answer to both these questions is probably “no”. Names that we associate with our peers or our teachers often feel too “used” to seem attractive and fitting for a chubby infant.\r\n\r\nBy contrast, names from our grandparents’ or even great-grandparents’ generation appear more attractive. Research in Denmark shows that two-syllable girls names ending in “a” (like Alma or Clara) have gained in popularity since 2000 – a century after the last time such names peaked.\r\n\r\nThat 100-year pattern makes sense because you don’t have nearly as many experiences with names from these generations. And though, as young parents, we think that we have hit the jackpot by finding a name that is just as unique as our precious newborn, our tastes are often actually aligned with the tastes of others from our generation. Just like there are generational preferences in furniture, music and hairstyles, so it is with baby names.\r\n\r\nOf course, not all popular first names can be traced back to older generations. Sometimes, parents are inspired by popular culture. In Denmark, Liam had never been a common name until the 2000s when it started topping lists of boys names. This must at least in part have to do with the Danish rapper and TV host LOC, AKA Liam O'Connor’s rise to fame. In 1991, meanwhile, 14,087 Kévins were reportedly born in France due largely to two film releases the year before: Kevin Costner’s Dances With Wolves, and Home Alone, whose main protagonist is called Kevin McCallister.\r\n\r\nBroader cultural changes also impact name popularity. After the second world war, Denmark was no longer cut off from cultural influences from the US and the UK. As a result, English names such as John and Tommy became extremely fashionable. The civil rights movement in the US, meanwhile, saw popularity in African-American naming patterns shift from biblical options like Elijah and Isaac to names such as Kareem after basketballer and activist Kareem Abdul-Jabbar.\r\n\r\nFurther, as more of us live in super-diverse societies, parents from different backgrounds are choosing names that can work across cultures. Here, names are often as much about personal taste as they are a means of passing on cultural heritage.",
                            ImgUrl = "https://s.abcnews.com/images/Health/covid-birthrates-pandemic-pregnancy-03-sh-llr-210327_1616866894517_hpMain_16x9_992.jpg",
                            Title = "Baby names: why we all choose the same ones",
                            UserId = "dea12856-c198-4129-b3f3-b893d8395082"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Parents are understandably worried about what would happen if their infant caught COVID-19. Babies may be considered vulnerable due to immature immune systems, and are also not eligible for most of the treatments and vaccinations available for older children and adults.\r\n\r\nThe good news is, most babies experience mild illness. Here’s what to expect if your baby tests positive.\r\n\r\nCan I protect my baby if I have COVID-19?\r\nIf you test positive, and have a newborn or infant at home, there are some protective steps you can take. These include hand-washing before providing care, and wearing a mask when breastfeeding or in close contact. Current evidence suggests COVID-19 cannot be spread through breastmilk.\r\n\r\nRead more: Should I get a COVID vaccine while I'm pregnant or breastfeeding? Is it safe for me and my baby?\r\n\r\nA weekly email with evidence-based analysis from Europe's best scholars\r\nIt’s still really important to continue breastfeeding (if you do so already) and there is no need to separate mother and baby.\r\n\r\nTransmission from older siblings and other close contacts may also be reduced by vaccination. Vaccination of parents and caregivers will also reduce their chance of severe disease, thereby minimising the risks and interruptions for mother and baby.\r\n\r\nWhat do I do if my baby has cold symptoms or a fever?\r\nTesting your baby is similar to testing yourself. Babies can often get PCR tests in the same places where you will be tested, or you can use a rapid antigen test (RAT) on them.\r\n\r\nIf you are using a RAT it’s important to check it’s for the correct age group, as not all RATs can be used on children. It will say on the packet whether it is suitable. Otherwise ask your pharmacist for the correct test for your child’s age.\r\n\r\nIt’s also important to follow the specific instructions for the test you have purchased, as not all will be the same.\r\n\r\nBaby with thermometer under its arm.\r\nBabies rarely experience severe disease from COVID infection. Shutterstock\r\nCOVID-19 is usually mild in babies\r\nThroughout the pandemic, children of all ages have been less likely to experience severe disease compared with adults. The likelihood of severe disease also appears to be lower with Omicron compared with previous variants, although the transmission of later variants has been higher.\r\n\r\nFrom our clinical experience, and international research, babies with COVID-19 have mostly had mild disease. The need for hospitalisation or intensive care is extremely uncommon. Babies may be at higher risk if they are premature or have another underlying serious illness or condition. Studies describing COVID-19 in newborns reflect that similar to other respiratory viruses like influenza and RSV, deaths are very rare.",
                            ImgUrl = "https://images.theconversation.com/files/463892/original/file-20220518-23-qdqsix.jpg?ixlib=rb-1.1.0&q=45&auto=format&w=1000&fit=clip",
                            Title = "COVID-19 in babies – here’s what to expect",
                            UserId = "dea12856-c198-4129-b3f3-b893d8395082"
                        },
                        new
                        {
                            Id = 8,
                            Description = "I remember a decade ago sitting in front of my 9-month-old daughter, who was in her high chair, and trying to spoon-feed her a pureed green vegetable. It didn’t matter if it was peas, green beans or something else, because the outcome was the same: I spooned it into her mouth, and it came right back out.\r\n\r\nCompare this with feeding her applesauce, for which she would open her mouth after each bite and almost bounce in her chair with pleasure. I nearly danced along with her. This was easier! Let’s just keep doing this! But as a nutritional epidemiologist, I knew that solely satisfying her desire for sweetness would not benefit her health in the long run.\r\n\r\nAt the University of Pittsburgh Graduate School of Public Health, I study the consequences of poor nutrition on the health of mothers and children. I recently served on a National Academies of Science, Engineering and Medicine committee that summarized guidelines on feeding infants and children up to age 2. As part of the committee, I helped to write a report about feeding young children added sugars and sugar-sweetened beverages. And – spoiler alert! – experts advise no added sugar for infants and little to no added sugar for children 12 to 24 months old.\r\n\r\nAdded sugars are sugars and syrups that are added to foods during processing or preparation or later at the table. They can be natural sugars, like honey, or artificial sweeteners, like high-fructose corn syrup. Yogurt, baby snacks, fruit drinks, desserts and sweet bakery products are the most common sources of added sugars in the diets of infants and toddlers.\r\n\r\nEuropeans, get our weekly newsletter with analysis from European scholars\r\nDifferent types of sugars in bowls, scoops and bags on a wooden table.\r\nSugar, sugar, everywhere. Avtor/iStock via Getty Images Plus\r\nUnlike sugars that naturally occur in fruits, dairy products, vegetables and bread and other grains, natural sugars and artificial sweeteners added to foods are the ones we should eliminate or limit in the diets of young children. But why?\r\n\r\nFrom birth to 24 months, proper growth and development require calories and nutrients. Foods and beverages high in added sugars provide a lot of calories – referred to as “empty calories” – but not a lot of nutrients. Offering foods with added sugars to children from birth to 24 months is problematic because they eat relatively small amounts of food at this stage. To ensure healthy nutrition, the food they eat must be high in nutrients. If young kids fill up on high-calorie, sugar-laden foods or drinks, it leaves less room for nutritious foods.\r\n\r\nChildren who are fed diets high in added sugars are more likely than children with lower sugar intakes to have a number of negative health consequences as they develop, including childhood obesity, cardiovascular disease and tooth decay.\r\n\r\nDiet from birth to 24 months also shapes long-term food preferences. People are hard-wired to crave sugar because it built up fat stores and kept our ancestors from starving when food was scarce. But kids can learn to accept bitter foods high in nutrients, like vegetables, if they are offered them repeatedly in early childhood. Setting healthy diet patterns early in life can help children maintain a healthy weight and avoid chronic disease.\r\n\r\nLittle boy eating a slice of green pepper while being held by mom.\r\nIf your child doesn’t like veggies at first, try, try again. MoMo Productions/DigitalVision via Getty Images\r\nConsidering that about 85% of infants and toddlers in the U.S. consume added sugar daily, here are some practical tips for parents and caregivers of babies and young children for eliminating or limiting their sugar consumption:\r\n\r\n1. Look on the food label\r\nCheck the amount of added sugars on the nutrition facts label on foods and drinks before you buy them. Labels include the amount of “Total Sugars” and, below that, the amount of “Added Sugars.” One 8-ounce serving of chocolate milk contains 15 grams of added sugar, for example, while regular cow’s milk has no added sugar.\r\n\r\n2. Switch to healthier drinks\r\nSwap out sugary drinks with water or milk (breast milk, formula or other milk, depending on the child’s age). Eliminate or limit sugary beverages like regular soda, flavored milks, Kool-Aid, fruit drinks, juice with less than 100% fruit, sports drinks, energy drinks and sweetened water or tea.\r\n\r\n3. Ditch sugar during food prep\r\nPrepare foods for your young child at home without adding sugar.",
                            ImgUrl = "https://images.theconversation.com/files/438849/original/file-20211222-48933-i4s8nb.jpg?ixlib=rb-1.1.0&rect=0%2C18%2C6016%2C3989&q=45&auto=format&w=926&fit=clip",
                            Title = "Why kids shouldn’t eat added sugar before they turn 2, according to a nutritional epidemiologist",
                            UserId = "dea12856-c198-4129-b3f3-b893d8395082"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Learning to read does not begin when a child puzzles over the words in a book for the first time.\r\n\r\nIn the early weeks of their lives and even before birth, babies are skilfully processing important information about the sounds they hear. They are attuning to tones, patterns of language and distinguishing their own familiar adults’ voices. Making sense of sounds, patterns, words and sentences are important skills that will help a child as they progress towards reading.\r\n\r\nEarly reading for under-threes is rooted in their daily lives. It involves lots of listening, communication, speech and language activities – not just sharing books.\r\n\r\nAs their language and communication skills develop and they build vocabulary, under-threes learn to use pictures, words and sounds, tell and retell familiar stories, and sing songs and rhymes. In turn, these activities help children navigate pictures, words and sentences they encounter on the page.\r\n\r\nNot about breaking news. Not about unfounded opinions.\r\nHere are five tips to support early reading for children aged under three.\r\n\r\n1: Create a “chatty” environment\r\nEncourage and support lots of communication. Research shows that talking to babies and toddlers helps them build vocabulary, while conversation a child simply overhears does not always contribute to their vocabulary development.\r\n\r\nTake turns in conversations and comment on their activities and the routines of the day. This could be when getting dressed, during play, nappy changing or taking a walk through the park. This will enable under-threes to begin to develop receptive language – the ability to understand others. They will make connections, notice, respond and engage with sounds and images in the environment, all important early reading skills.\r\n\r\n2. Have fun with rhythm and music making\r\nPlay lots of rhyming games, sing nursery rhymes, comment on rhyming patterns in songs and make lots of music. Repetition and predictable rhyme helps children remember new words.\r\n\r\nParents holding baby, father talking to paby\r\nTeach children nursery rhymes to help them remember words through repetition. pixelheadphoto digitalskillet/Shutterstock\r\nAlliteration and assonance in poetry and nursery rhymes draws attention to the individual sounds and patterns in words.\r\n\r\n3. Share meaningful images\r\nUse images, such as pictures and photographs of familiar places, objects, families and communities, to create meaningful shared experiences for children under three. Make books with photographs or apps to encourage talk and interaction about children’s home cultures and families. Encourage children to point out the details they encounter in pictures.\r\n\r\nReading pictures and following images helps children learn to read as they begin to make connections, understand sequences of stories and further develop their comprehension skills. Very young children are adept at interpreting visual texts and noticing details.\r\n\r\n4. Draw attention to print in daily life\r\nUse your environment and local community to point out words at home, at nursery or out and about. This could be print on cereal boxes, signs or logos. Encountering print in their environment helps under-threes recognise letters, sounds and images that have meaning.\r\n\r\n5. Engage with books frequently\r\nShared book reading, story time and retelling stories together are valuable points of connection and social interaction for under-threes. When supportive adults encourage the exploration of pictures, draw attention to the text and the conventions of print, and talk about the characters or the sequence of the story, the story comes alive to create awe and wonder for children.\r\n\r\nChoose a range of books – cloth, sensory, picture books and story books or online story apps. Ensure that under-threes also have independent access to these, so they are able to choose books or apps themselves, turn pages or handle interactive technology.\r\n\r\nPuppets, props and role-play help to make books or stories and rhymes interactive and help children recreate stories through imaginative play. Under-threes need to relate images, sounds and words to their own experiences, so ensure that the props you use link to the child’s culture and daily life..",
                            ImgUrl = "https://media-cldnry.s-nbcnews.com/image/upload/t_fit-1240w,f_auto,q_auto:best/rockcms/2022-02/baby-quotes-te-220202-c47cac.jpg",
                            Title = "Learning to read starts earlier than you might think: five tips from an expert",
                            UserId = "dea12856-c198-4129-b3f3-b893d8395082"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Britain’s birth rates are plunging. The number of babies being born has been in steep decline since 2017. Now, researchers are investigating early signs that the pandemic may have caused rates to drop even further.\r\n\r\nThis is not totally surprising given the difficult economic conditions that have come with the pandemic – history also shows that economic uncertainty has long been associated with reduced birth rates.\r\n\r\nThe birth rate in the UK has been declining year on year since 2013 and has been linked to the austerity measures implemented by the government in response to the 2008 global financial crisis.\r\n\r\nAusterity cuts have decimated social care, welfare and local government. They have led to rising rents (private rents increased by 24% between 2010 to 2017), shrinking social housing stock, adults living or moving back home with parents, along with more people precariously employed, due to insecure forms of work and retreating state support. Such inequalities have seeped into the fabric of everyday life. And these austerity measures have been particularly acute for young people growing up over the past ten years.\r\n\r\nA weekly email with evidence-based analysis from Europe's best scholars\r\nAs part of my recent research, I looked at how austerity has influenced people’s decisions around having children. I carried out in-depth interviews with 12 people living in the North East of England – a region that has some of the lowest birth rates in the UK – and that has been significantly damaged by austerity.\r\n\r\nAltered reproductive plans\r\nAll the people I spoke to had been deeply affected by the government’s austerity measures. They told me how the cuts in spending and the economic climate had altered their reproductive plans. Vihaan was not alone when he told me how he and his partner had put their plans on hold because of issues with “financial planning, stability…and having enough of a financial back up so that we can afford a decent life”.\r\n\r\nMany people I spoke with also found it hard to know whether to have children – or more children if they already had a child. Austerity had affected their intimate relationships and changed their feelings about what their future might hold.\r\n\r\nThey spoke a lot about their worries for the future. Most of these worries were based on financial insecurity – concerns about secure and appropriate housing, steady employment – as well as meaningful and healthy relationships.\r\n\r\nThey also spoke about the sheer pressure of carrying these worries, keeping them in check and at the same time holding together hopes for their unknown reproductive futures.\r\n\r\nWoman holding newborn baby in chair.\r\nThe birth rate in England and Wales is now the lowest it has ever been since records began. Shutterstock\r\nOne participant, Lauren, said she worries about financial instability – particularly her partner’s debt - and how this will affect their future. Like many other participants, Lauren spoke about wanting to do more than just survive:\r\n\r\nI want to be in the position in the future where I do have a kid, that I think I can give it everything it wants. I don’t want to have to scrimp and save to be able to give it a life.\r\n\r\nSimilarly, Jonny spoke about his worries of needing to feel ready and prepared if they were to have a child. For him and his partner, this included having certain material and practical elements in place – housing, childcare and income - before feeling able to make a decision.\r\n\r\nHe described this as “sorting ourselves out” and spoke about all the decision making this involved: whether to have children or not, whether to stay living where they are now or to move closer to his mum, along with whether to keep his stable job or to risk setting up his own business. He talked about “putting real thought” into these decisions and “weighing them up”.\r\n\r\nLimited choice\r\nFor the people I interviewed, and many others like them, a combination of personal circumstances and government cuts in spending have made their futures less certain. And for some, it has taken away the possibility of having children – or more children – because of ongoing financial concerns and worries.\r\n\r\nSze-Kei described the impact of austerity measures on her family, saying: “at the back of your mind, you have to think about the financial side of things”. She talked about how she hoped to have another child in the future but she worried about if they could afford it. She spoke about how she wanted to remember how hard it is to raise children and how she felt about being pregnant the first time. Sze-Kei also seemed to bear this worry more than her husband, saying “I don’t think I can cope financially”.\r\n\r\nIn this way, it is important to recognise that austerity policies not only directly affect people’s lives and decision making, but they ultimately shape people’s life course – with those on the lowest incomes often hit hardest. And given the ongoing uncertainty as a result of the pandemic, along with the fact that poor young people have been the hardest hit by COVID, this may well be a trend that continues for some time to come...",
                            ImgUrl = "https://www.babycentre.co.uk/ims/2013/10/159450328_wide.jpg.pagespeed.ce.8nFAgATVad.jpg",
                            Title = "‘I don’t think I can cope financially’ – the people putting off parenthood because of austerity",
                            UserId = "dea12856-c198-4129-b3f3-b893d8395082"
                        });
                });

            modelBuilder.Entity("BabyKat.Infrastructure.Data.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/39/25/514019_1219_XL.jpg",
                            Name = "Strollers"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/39/58/517361_9155_XXXL.jpg",
                            Name = "Car Seats"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/40/12/522701_27072_XXXL.jpg",
                            Name = "Nursery"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/40/44/525884_21115_XXXL.jpg",
                            Name = "Health"
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/39/92/520712_12268_XXXL.jpg",
                            Name = "Feeding"
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/40/33/524835_31524_XXXL.jpg",
                            Name = "Diaper"
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/40/24/523962_24845_XXXL.jpg",
                            Name = "Soothe"
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "https://s13emagst.akamaized.net/products/1863/1862082/images/res_1b722249fcaa154fb1533cbcd08f8480.jpg",
                            Name = "Toys"
                        });
                });

            modelBuilder.Entity("BabyKat.Infrastructure.Data.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("BabyKat.Infrastructure.Data.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rating")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("BabyKat.Infrastructure.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1300)
                        .HasColumnType("nvarchar(1300)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("money");

                    b.Property<decimal>("Rating")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 6,
                            Description = "Pros: Rubber base, hold handle, suitable for multiple ages. Cons: Shallow seat, low splash guardSimple, sturdy, and easy to clean, this toddler toilet that has exactly what you need and no more.",
                            ImageUrl = "https://m.media-amazon.com/images/I/71XDXNt9n5L._SL1500_.jpg",
                            Name = "OXO Tot Potty Chair",
                            Price = 25.99m,
                            Rating = 0.00m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 6,
                            Description = "Pros: Deep bowl, convenient size, breeze to cleanCons: Limited age range, backlessSmall and functional potty that is perfect for budget minded parents",
                            ImageUrl = "https://m.media-amazon.com/images/I/61+uuyDhAcL._SL1500_.jpg",
                            Name = "BabyBjörn Smart Potty",
                            Price = 22.99m,
                            Rating = 0.00m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 6,
                            Description = "Adjustable, easy storage, one piece. Toilet needed, assistance needed. Space saving and portable potty seat great for small bathrooms and travel.",
                            ImageUrl = "https://m.media-amazon.com/images/I/716ccNgQUSL._SX466_.jpg",
                            Name = "BabyBjörn Toilet Trainer",
                            Price = 34.99m,
                            Rating = 0.00m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 6,
                            Description = "Secure sitting area, soft on bottom, easy to store.Not for every toilet, noticeable wear over time.Cushy on-toilet trainer contoured to fit little bums.",
                            ImageUrl = "https://m.media-amazon.com/images/I/716ccNgQUSL._SX466_.jpg",
                            Name = "Dreambaby Soft Touch Potty Seat",
                            Price = 24.98m,
                            Rating = 0.00m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 6,
                            Description = "Pocket style,Soft,Better cloth price,Requires stuffing,Synthetic fiber,Less impressive absorbency",
                            ImageUrl = "https://m.media-amazon.com/images/I/51JiAyr7MjL._SX300_SY300_QL70_FMwebp_.jpg",
                            Name = "Rumparooz Pocket",
                            Price = 25.95m,
                            Rating = 0.00m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            Description = "Great absorbency, Good leak protection,Elemental chlorine-free,  Fragrance, Daytime & overnights are similar",
                            ImageUrl = "https://m.media-amazon.com/images/I/71fm7WgBFRL._AC_SX679_.jpg",
                            Name = "Pampers Swaddlers Overnights",
                            Price = 0.48m,
                            Rating = 0.00m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "Great crash test results, high quality, rigid LATCH, Heavy, hard to move, harder to use. Impressive crash test results and quality materials make this a great choice ",
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/39/47/516270_16078_S.jpg",
                            Name = "Clek Oobr",
                            Price = 369.99m,
                            Rating = 0.00m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Description = "Better crash test results, price, lighter. Less padding, quality. Less padding, quality ",
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/39/47/516270_16078_S.jpg",
                            Name = "Diono Monterey XT",
                            Price = 139.99m,
                            Rating = 0.00m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Description = "Reasonable price, better crash test analysis, super comfy, high-quality, Heavier, can't go backless, This high-quality booster is super comfortable, with better crash test analysis and a reasonable price.",
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/40/66/528168_30157_S.jpg",
                            Name = "UPPAbaby Alta",
                            Price = 179.99m,
                            Rating = 0.00m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Description = "Easiest to use, better crash test results, price,Average quality, widest seat bottom,Nicely priced, easy to use option with better crash test results",
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/40/66/528168_30157_S.jpg",
                            Name = "Chicco KidFit",
                            Price = 109.99m,
                            Rating = 0.00m
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            Description = "Easier to use, narrow width, comfortable,Higher price, higher HIC crash test result, Expensive, quality seat that is narrow and easy to use. ",
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/39/48/516311_9127_XXXL.jpg",
                            Name = "Peg Perego Viaggio Flex 120",
                            Price = 319.99m,
                            Rating = 0.00m
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            Description = "Easy to use, giant canopies, quick fold, includes accessories. Brakes require extra attention to set, hard to push and turn off-road ",
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/40/66/528137_7625_XXXL.jpg",
                            Name = "Zoe Twin+",
                            Price = 299.00m,
                            Rating = 0.00m
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 1,
                            Description = "Very small, well-made, adjustable leg rests.Expensive, harder to fold, no peek-a-boo windows ",
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/39/74/518934_30632_XXXL.jpg",
                            Name = "Mountain Buggy Nano Duo",
                            Price = 549.95m,
                            Rating = 0.00m
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 2,
                            Description = "Easy to install and use, cozy comfort, nice quality.Average crash test results.",
                            ImageUrl = "https://bgl-i48k9hqubvkf8lnt.stackpathdns.com/photos/39/25/514035_20386_XL.jpg",
                            Name = "Britax Boulevard ClickTight ARB",
                            Price = 399.99m,
                            Rating = 0.00m
                        });
                });

            modelBuilder.Entity("BabyKat.Infrastructure.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "dea12856-c198-4129-b3f3-b893d8395082",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3a592a11-8bed-4125-9158-600ed829b0c8",
                            Country = "Bulgaria",
                            CreatedDate = new DateTime(2022, 12, 17, 22, 47, 28, 853, DateTimeKind.Local).AddTicks(78),
                            Email = "agent@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Ivan",
                            IsDeleted = false,
                            LastModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Petrov",
                            LockoutEnabled = false,
                            NormalizedEmail = "agent@mail.com",
                            NormalizedUserName = "IVANCHO",
                            PasswordHash = "AQAAAAEAACcQAAAAELBVK2da5inshIX3ThoiFPqeJzZfHOjvVlVPTzXbTC2tfXAnebbHgMs4mQVAKEpy0Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2591b139-fb54-47f6-8cb4-9c23bb866cee",
                            TwoFactorEnabled = false,
                            UserName = "ivancho"
                        },
                        new
                        {
                            Id = "dea12856-c198-4129-b3f3-b893d22295082",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ededd51f-bea3-4c08-98fc-c3346ba4c6bc",
                            Country = "Bulgaria",
                            CreatedDate = new DateTime(2022, 12, 17, 22, 47, 28, 863, DateTimeKind.Local).AddTicks(7426),
                            Email = "agent@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Natali",
                            IsDeleted = false,
                            LastModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Petrov",
                            LockoutEnabled = false,
                            NormalizedEmail = "agen22t@mail.com",
                            NormalizedUserName = "GEPETO",
                            PasswordHash = "AQAAAAEAACcQAAAAEEM2HHyMmkZnJszdrEI1SAPzUwqpNrQmOlB33SxxJaxxGHvdyM7Z1D/TyvZe2eL9JQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "55ee9701-4d75-4601-b28c-238cda268dec",
                            TwoFactorEnabled = false,
                            UserName = "gepeto"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            ConcurrencyStamp = "4fbf3a28-f878-4492-b40d-c5de13b4b11b",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            ConcurrencyStamp = "87db2d6f-23bb-4b1c-9706-81052e0009a9",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "dea12856-c198-4129-b3f3-b893d8395082",
                            RoleId = "1"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BabyKat.Infrastructure.Data.Article", b =>
                {
                    b.HasOne("BabyKat.Infrastructure.Data.User", "User")
                        .WithMany("Articles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BabyKat.Infrastructure.Data.Comment", b =>
                {
                    b.HasOne("BabyKat.Infrastructure.Data.Article", "Article")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("BabyKat.Infrastructure.Data.Post", b =>
                {
                    b.HasOne("BabyKat.Infrastructure.Data.Product", "Product")
                        .WithMany("Posts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BabyKat.Infrastructure.Data.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BabyKat.Infrastructure.Data.Product", b =>
                {
                    b.HasOne("BabyKat.Infrastructure.Data.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BabyKat.Infrastructure.Data.User", null)
                        .WithMany("Products")
                        .HasForeignKey("UserId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BabyKat.Infrastructure.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BabyKat.Infrastructure.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BabyKat.Infrastructure.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BabyKat.Infrastructure.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BabyKat.Infrastructure.Data.Article", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("BabyKat.Infrastructure.Data.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BabyKat.Infrastructure.Data.Product", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("BabyKat.Infrastructure.Data.User", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Posts");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
